name: "Deploy Observability Stack"

on:
  push:
    branches: [ main, staging ]
    paths:
      - 'observability/**'
      - '.github/workflows/observability.yml'
  workflow_dispatch:

env:
  PROJECT_ID: entrevista-nemesisrfl
  GKE_CLUSTER: crypto-ticker-entrevista
  GKE_ZONE: us-central1-a

jobs:
  deploy-observability:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: 'Get GKE credentials'
      uses: 'google-github-actions/get-gke-credentials@v1'
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    - name: Setup Helm
      uses: azure/setup-helm@v1
      with:
        version: 'v3.8.1'

    - name: Add Helm repositories
      run: |
        helm repo add grafana https://grafana.github.io/helm-charts
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo update

    - name: Create observability namespace
      run: |
        kubectl create namespace observability --dry-run=client -o yaml | kubectl apply -f -

    - name: Deploy Loki
      run: |
        helm upgrade --install loki grafana/loki \
          -n observability -f observability/loki-values.yaml

    - name: Deploy Promtail
      run: |
        helm upgrade --install promtail grafana/promtail \
          -n observability -f observability/promtail-values.yaml

    - name: Deploy Prometheus
      run: |
        helm upgrade --install prometheus prometheus-community/prometheus \
          -n observability -f observability/prometheus-values.yaml

    - name: Deploy Grafana
      run: |
        helm upgrade --install grafana grafana/grafana \
          -n observability -f observability/grafana-values.yaml

    - name: Wait for pods to be ready
      run: |
        kubectl wait --for=condition=ready pod --all -n observability --timeout=300s

    - name: Get Grafana admin password
      run: |
        echo "GRAFANA_PASSWORD=$(kubectl get secret --namespace observability grafana -o jsonpath="{.data.admin-password}" | base64 --decode)" >> $GITHUB_ENV

    - name: Get Grafana IP
      run: |
        echo "GRAFANA_IP=$(kubectl get svc -n observability grafana -o jsonpath="{.status.loadBalancer.ingress[0].ip}")" >> $GITHUB_ENV

    - name: Print access information
      run: |
        echo "Grafana is available at: http://${{ env.GRAFANA_IP }}"
        echo "Username: admin"
        echo "Password: ${{ env.GRAFANA_PASSWORD }}" 