name: CI/CD Pipeline

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]

env:
  PROJECT_ID: entrevista-nemesisrfl
  GKE_CLUSTER: crypto-ticker-entrevista
  GKE_ZONE: us-central1-a
  DOCKER_IMAGE: nemesisrfl/crypto-ticker
  
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set environment
      run: |
        if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
          echo "ENVIRONMENT=prod" >> $GITHUB_ENV
        else
          echo "ENVIRONMENT=staging" >> $GITHUB_ENV
        fi

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./app
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          ${{ env.DOCKER_IMAGE }}:${{ env.ENVIRONMENT }}-latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    steps:
    - uses: actions/checkout@v2

    - name: Set environment
      run: |
        if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
          echo "ENVIRONMENT=prod" >> $GITHUB_ENV
        else
          echo "ENVIRONMENT=staging" >> $GITHUB_ENV
        fi

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: 'Get GKE credentials'
      uses: 'google-github-actions/get-gke-credentials@v1'
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    - name: Setup Helm
      uses: azure/setup-helm@v1
      with:
        version: 'v3.8.1'

    - name: Deploy to GKE
      run: |
        helm upgrade --install crypto-ticker-${{ env.ENVIRONMENT }} ./helm/crypto-ticker \
          -f ./helm/crypto-ticker/environments/${{ env.ENVIRONMENT }}/values.yaml \
          --set image.repository=${{ env.DOCKER_IMAGE }} \
          --set image.tag=${{ github.sha }} 