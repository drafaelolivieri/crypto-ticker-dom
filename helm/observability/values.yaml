kube-prometheus-stack:
  fullnameOverride: prometheus
  prometheus:
    prometheusSpec:
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      serviceMonitorSelector: {}
      podMonitorSelector: {}
      additionalScrapeConfigs:
        - job_name: 'google-cloud-monitoring'
          honor_labels: true
          metrics_path: /metrics
          scheme: http
          static_configs:
            - targets: ['localhost:9090']
      sidecarContainers:
        - name: stackdriver-sidecar
          image: gcr.io/stackdriver-prometheus/stackdriver-prometheus-sidecar:0.9.0
          args:
            - "--prometheus.wal-directory=/prometheus/wal"
            - "--stackdriver.project-id=entrevista-nemesisrfl"
            - "--include={job=~\".*\"}"
            - "--wall-time=5s"
            - "--prometheus.api-address=http://localhost:9090"
            - "--stackdriver.kubernetes.location=us-central1-a"
            - "--stackdriver.kubernetes.cluster-name=crypto-ticker-entrevista"
          ports:
            - name: sidecar
              containerPort: 9091
          env:
            - name: GOOGLE_CLOUD_PROJECT
              value: "entrevista-nemesisrfl"
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/etc/gcp/service-account.json"
          volumeMounts:
            - name: prometheus-storage
              mountPath: /prometheus
            - name: gcp-creds
              mountPath: /etc/gcp
              readOnly: true
      volumes:
        - name: gcp-creds
          secret:
            secretName: gcp-service-account
  grafana:
    enabled: true
    replicas: 1
    service:
      type: ClusterIP
      port: 3000
    persistence:
      enabled: true
      size: 10Gi
      storageClassName: standard
    terminationGracePeriodSeconds: 10
    strategy:
      type: Recreate
    podAnnotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    startupProbe:
      failureThreshold: 10
      initialDelaySeconds: 30
      periodSeconds: 10
      httpGet:
        path: /api/health
        port: 3000
    readinessProbe:
      failureThreshold: 3
      timeoutSeconds: 5
      periodSeconds: 10
      httpGet:
        path: /api/health
        port: 3000
    livenessProbe:
      failureThreshold: 3
      timeoutSeconds: 5
      periodSeconds: 10
      httpGet:
        path: /api/health
        port: 3000
    grafana.ini:
      server:
        http_port: 3000
        domain: cs-us-east1-yeah.cloudshell.dev
        root_url: https://3001-cs-7bc564a6-1c3a-4afa-8e1a-86a29dba4879.cs-us-east1-yeah.cloudshell.dev
        serve_from_sub_path: true
      security:
        allow_embedding: true
        cookie_samesite: none
        cookie_secure: true
        allowed_origins: https://3001-cs-7bc56a6-1c3a-4afa-8e1a-86a29dba4879.cs-us-east1-yeah.cloudshell.dev
      auth:
        disable_login_form: false
      auth.anonymous:
        enabled: true
        org_role: Admin
      database:
        cache_mode: shared
        wal_enabled: true
        busy_timeout: 30000
      dataproxy:
        timeout: 300
        keep_alive_seconds: 60
        expect_continue_timeout_seconds: 10
        idle_conn_timeout_seconds: 90
        response_limit: 0
      cors:
        allowed_origins: http://cs-7bc564a6-1c3a-4afa-8e1a-86a29dba4879.cs-us-east1-yeah.cloudshell.dev, https://cs-7bc564a6-1c3a-4afa-8e1a-86a29dba4879.cs-us-east1-yeah.cloudshell.dev, http://3001-cs-7bc564a6-1c3a-4afa-8e1a-86a29dba4879.cs-us-east1-yeah.cloudshell.dev, https://3001-cs-7bc564a6-1c3a-4afa-8e1a-86a29dba4879.cs-us-east1-yeah.cloudshell.dev
        csrf_trusted_origins: http://cs-7bc564a6-1c3a-4afa-8e1a-86a29dba4879.cs-us-east1-yeah.cloudshell.dev, https://cs-7bc564a6-1c3a-4afa-8e1a-86a29dba4879.cs-us-east1-yeah.cloudshell.dev, http://3001-cs-7bc564a6-1c3a-4afa-8e1a-86a29dba4879.cs-us-east1-yeah.cloudshell.dev, https://3001-cs-7bc564a6-1c3a-4afa-8e1a-86a29dba4879.cs-us-east1-yeah.cloudshell.dev
    additionalDataSources:
      - name: Tempo
        type: tempo
        url: http://observability-tempo:3100
        access: proxy
        jsonData:
          httpMethod: GET
          tracesToLogs:
            datasourceUid: prometheus
          serviceMap:
            datasourceUid: prometheus
          nodeGraph:
            enabled: true
          search:
            hide: false
          lokiSearch:
            datasourceUid: prometheus
          timeout: 60
  prometheus:
    prometheusSpec:
      retention: 15d
      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 50Gi
      serviceMonitorSelector: {}
      serviceMonitorNamespaceSelector: {}
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelector: {}
      podMonitorNamespaceSelector: {}
      podMonitorSelectorNilUsesHelmValues: false
      additionalScrapeConfigs:
        - job_name: prometheus
          static_configs:
            - targets:
              - localhost:9090

        - job_name: crypto-ticker-staging
          metrics_path: /metrics
          scheme: http
          static_configs:
            - targets:
              - crypto-ticker-staging:8080
          metric_relabel_configs:
            - source_labels: [__name__]
              target_label: environment
              replacement: staging

        - job_name: crypto-ticker-prod
          metrics_path: /metrics
          scheme: http
          static_configs:
            - targets:
              - crypto-ticker-prod:8080
          metric_relabel_configs:
            - source_labels: [__name__]
              target_label: environment
              replacement: production

        - job_name: tempo
          metrics_path: /metrics
          scheme: http
          static_configs:
            - targets:
              - observability-tempo:3100
          metric_relabel_configs:
            - source_labels: [__name__]
              target_label: environment
              replacement: monitoring

tempo:
  enabled: true
  nameOverride: tempo
  fullnameOverride: tempo-observability
  serviceMonitor:
    enabled: true
  service:
    type: ClusterIP
  persistence:
    enabled: true
    size: 10Gi
  receivers:
    otlp:
      protocols:
        grpc:
          endpoint: "0.0.0.0:4317"
        http:
          endpoint: "0.0.0.0:4318"
  storage:
    trace:
      backend: local
      local:
        path: /var/tempo/traces
  config: |
    server:
      http_listen_port: 3100
      grpc_server_max_recv_msg_size: 8388608
      grpc_server_max_send_msg_size: 8388608
      http_server_read_timeout: 300s
      http_server_write_timeout: 300s
    distributor:
      receivers:
        otlp:
          protocols:
            grpc:
              endpoint: "0.0.0.0:4317"
            http:
              endpoint: "0.0.0.0:4318"
    ingester:
      trace_idle_period: 10s
      max_block_bytes: 1_000_000
      max_block_duration: 5m
    compactor:
      compaction:
        block_retention: 48h
    metrics_generator:
      registry:
        external_labels:
          source: tempo
    storage:
      trace:
        backend: local
        local:
          path: /var/tempo/traces
  extraArgs:
    "search.enabled": "true"

 